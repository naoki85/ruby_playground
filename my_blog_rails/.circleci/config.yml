# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    branches:
      only:
        - master
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.6.2-stretch-node-browsers
         environment:
           RAILS_ENV: test
           DB_HOST: 127.0.0.1
           DB_USERNAME: 'root'
           DB_PASSWORD: ''
           REDIS_URL: redis://127.0.0.1:6379

       - image: circleci/mysql:5.7
       - image: redis

    working_directory: ~/repo

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints: "33:4a:c0:0d:fb:63:3b:1c:16:13:48:dd:11:6d:a4:49"

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install gem dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: install node dependencies
          command: |
            yarn install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: mv ./config/storage.yml.ci ./config/storage.yml
      - run: rm ./config/database.yml
      - run: mv ./config/database.yml.ci ./config/database.yml
      - run: bundle exec rake db:create RAILS_ENV=test
      - run: bundle exec ridgepole -c config/database.yml -E test --apply -f db/schemas/Schemafile

      - run:
          name: webpacker compile
          command: NODE_ENV=test bundle exec rails webpacker:compile
      # run tests!
      - run:
          name: run tests
          command: bundle exec rspec
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - run:
          name: Add ssh-agent
          command: |
            ssh-agent -s > ~/.ssh_agent_conf
            source ~/.ssh_agent_conf
            for _k in $(ls ${HOME}/.ssh/id_*); do
              ssh-add ${_k} || true
            done

      - run:
          name: Add env
          command: |
            bundle exec rails runner "Tasks::WriteSecretsInEnv.execute" > .env

      - run:
          name: Deploy Master
          command: |
            bundle exec cap production deploy
